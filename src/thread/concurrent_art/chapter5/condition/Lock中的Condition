##Condition
我们通过之前的学习知道了：synchronized关键字与wait()和notify/notifyAll()
方法相结合可以实现等待/通知机制，ReentrantLock类当然也可以实现，但是需要借助于
Condition接口与newCondition() 方法。Condition是JDK1.5之后才有的，
它具有很好的灵活性，比如可以实现多路通知功能也就是在一个Lock对象中可以创建
多个Condition实例（即对象监视器），线程对象可以注册在指定的Condition中，
从而可以有选择性的进行线程通知，在调度线程上更加灵活。

在使用wait/notify实现等待通知机制的时候我们知道必须执行完notify()方法所在的
synchronized代码块后才释放锁。在这里也差不多，必须执行完signal所在的try语句
块之后才释放锁，condition.await()后的语句才能被执行。

