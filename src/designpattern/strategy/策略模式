策略模式核心思想:
面向接口编程,将一个对象的行为抽象成一个个接口,
鸭子对象,有游泳,飞,叫等,首先想一下鸭子对象肯定都有的行为--游泳,所以游泳不用提取出来 直接在duck类写了
飞有的会飞,有的不会飞;
叫有的不会叫,有的呱呱呱叫,有的吱吱吱叫;
所以可以将飞和叫抽象成接口,然后实现接口实现各种飞.

最后在一个duck总抽象类中,实例化这些接口,再写方法,让方法写入这些行为的具体实现
再让各种类型的鸭子实现duck 在调用方法时传入需要的接口方法参数就行


总结：
将鸭子的行为封装成接口，比如：叫，飞这种，共同的特性直接写在总duck抽象类中就可以了
然后写一个公共的鸭子Duck抽象类 抽象类里面实现所有鸭子共同有的行为，比如游泳，再引用提取出去的行为接口fly，quack。
然后生成各种不同的鸭子，让这些鸭子各自实现自己的飞，叫的类型。